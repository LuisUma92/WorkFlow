import click
import subprocess
from pathlib import Path
from appdirs import user_config_dir
import os
import json

# loading User config folder
user_dir = Path(user_config_dir("cleta", "LuisUmana"))
if not user_dir.is_dir():
    user_dir.mkdir()

books = [
    {'name': 'bauerF1', 'code': '530_B344f1', 'distro': [
        ]},
    {'name': 'bauer', 'code': '530_B344f2', 'distro': []},
    {'name': 'giancoli', 'code': '530_G433f4', 'distro': []},
    {'name': 'halliday', 'code': '530_H193f10', 'distro': []},
    {'name': 'ohanian', 'code': '530_O36f3', 'distro': []},
    {'name': 'resnickF4', 'code': '530_R434f4', 'distro': [
            [15, '03',   1,  25],
            [15, '04',  26,  38],
            [15, '05',  39,  56],
            [15, '07',  57,  61],
            [15, '08',  62,  65],
            [15, '09',  66,  68],
            [15, '10',  69,  72],
            [15, 'PC',  73,  75],
            [19, '03',   1,   6],
            [19, '04',   7,  24],
            [19, '06',  25,  30],
            [19, '08',  31,  38],
            [19, '09',  39,  47],
            [19, '10',  48,  55],
            [19, 'PC',  56,  60]
        ]},
    {'name': 'resnik', 'code': '530_R434f5', 'distro': [
        [1,  '02',   1,  2],
        [1,  '03',   3, 11],
        [1,  '04',  12, 22],
        [1,  '05',  23, 28],
        [1,  '06',  29, 30],
        [1,  '07',  31, 33],
        [1,  'A0',   1, 10],
        [2,  '02',   1, 10],
        [2,  '03',  11, 20],
        [2,  '04',  21, 39],
        [2,  '05',  40, 50],
        [2,  '06',  51, 61],
        [2,  'A0',   1, 33],
        [2,  'PC',   1,  1],
        [3,  '05',   1, 10],
        [3,  '06',  11, 11],
        [3,  '07',  12, 19],
        [3,  '08',  20, 28],
        [3,  'A0',   1, 11],
        [3,  'PC',   1,  1],
        [4,  '01',   1,  4],
        [4,  '02',   5, 12],
        [4,  '03',  13, 28],
        [4,  '04',  29, 33],
        [4,  '05',  34, 38],
        [4,  '06',  29, 45],
        [4,  'A0',   1, 28],
        [4,  'PC',   1, 10],
        ]},
    {'name': 'searsF12', 'code': '530_S439fi12', 'distro': []},
    {'name': 'searsF13', 'code': '530_S439fi13', 'distro': []},
    {'name': 'sears', 'code': '530_S439fi14', 'distro': [
            [1,  '04',   1, 13],
            [1,  '05',  14, 16],
            [1,  '06',  17, 23],
            [1,  '07',  24, 26],
            [1,  '08',  27, 35],
            [1,  '09',  36, 41],
            [1,  '10',  42, 48],
            [1,  'A0',  49, 89],
            [1,  'D0',  90, 94],
            [2,  '01',   1,  6],
            [2,  '02',   7, 11],
            [2,  '04',  12, 18],
            [2,  '05',  19, 34],
            [2,  '06',  35, 50],
            [2,  '07',  51, 54],
            [2,  'A0',  55, 86],
            [2,  'D0',  87, 92],
            [3,  '01',   1,  4],
            [3,  '02',   5,  8],
            [3,  '03',   9, 22],
            [3,  '04',  23, 29],
            [3,  '05',  30, 38],
            [3,  'A0',  39, 78],
            [3,  'D0',  79, 85],
            [4,  '01',   1,  5],
            [4,  '03',   6, 15],
            [4,  '04',  16, 19],
            [4,  '05',  20, 24],
            [4,  '06',  25, 29],
            [4,  'A0',  30, 55],
            [4,  'D0',  56, 60],
            [5,  '01',   1, 10],
            [5,  '02',  11, 24],
            [5,  '03',  25, 42],
            [5,  '04',  43, 59],
            [5,  'A0',  60, 111],
            [5,  'D0', 112, 118],
            [6,  '01',   1, 15],
            [6,  '02',  16, 32],
            [6,  '03',  33, 49],
            [6,  '04',  50, 61],
            [6,  'A0',  62, 92],
            [6,  'D0',  93, 97],
            [7,  '01',   1, 13],
            [7,  '02',  14, 25],
            [7,  '03',  26, 30],
            [7,  '04',  31, 34],
            [7,  '05',  35, 36],
            [7,  'A0',  37, 79],
            [7,  'D0',  80, 84],
            [8,  '01',   1, 15],
            [8,  '02',  16, 31],
            [8,  '03',  32, 45],
            [8,  '04',  46, 50],
            [8,  '05',  51, 60],
            [8,  '06',  61, 63],
            [8,  'A0',  64, 102],
            [8,  'D0', 103, 109],
            [9,  '01',   1, 8],
            [9,  '02',   9, 17],
            [9,  '03',  18, 27],
            [9,  '04',  28, 47],
            [9,  '05',  48, 53],
            [9,  '06',  54, 55],
            [9,  'A0',  56, 89],
            [9,  'D0',  90, 91],
            [10, '01',   1, 7],
            [10, '02',   8, 16],
            [10, '03',  17, 28],
            [10, '04',  29, 34],
            [10, '05',  35, 39],
            [10, '06',  40, 50],
            [10, '07',  51, 53],
            [10, 'A0',  54, 90],
            [10, 'D0',  91, 97],
            [11, '02',   1, 3],
            [11, '03',   4, 23],
            [11, '04',  24, 37],
            [11, '05',  38, 41],
            [11, 'A0',  42, 88],
            [11, 'D0',  89, 95],
            [12, '01',   1, 7],
            [12, '02',   8, 25],
            [12, '03',  26, 35],
            [12, '04',  36, 40],
            [12, '05',  41, 48],
            [12, '06',  49, 50],
            [12, 'A0',  51, 87],
            [12, 'D0',  88, 92],
            [13, '01',   1, 10],
            [13, '02',  11, 15],
            [13, '03',  16, 19],
            [13, '04',  20, 26],
            [13, '05',  27, 31],
            [13, '06',  32, 35],
            [13, '07',  36, 37],
            [13, '08',  37, 40],
            [13, 'A0',  41, 78],
            [13, 'D0',  79, 84],
            [14, '01',   1, 6],
            [14, '02',   7, 23],
            [14, '03',  24, 36],
            [14, '04',  37, 44],
            [14, '05',  45, 52],
            [14, '06',  53, 58],
            [14, '07',  59, 62],
            [14, '08',  63, 63],
            [14, 'A0',  64, 91],
            [14, 'D0',  92, 96],
            [15, '02',   1, 6],
            [15, '03',   7, 14],
            [15, '04',  15, 21],
            [15, '05',  22, 29],
            [15, '06',  30, 35],
            [15, '08',  36, 47],
            [15, 'A0',  48, 76],
            [15, 'D0',  77, 80],
            [16, '01',   1, 5],
            [16, '02',   6, 12],
            [16, '03',  13, 24],
            [16, '04',  25, 30],
            [16, '05',  31, 33],
            [16, '06',  34, 39],
            [16, '07',  40, 43],
            [16, '08',  44, 56],
            [16, '09',  57, 58],
            [16, 'A0',  59, 74],
            [16, 'D0',  75, 81],
            [17, '02',   1, 3],
            [17, '03',   4, 10],
            [17, '04',  11, 22],
            [17, '05',  23, 33],
            [17, '06',  34, 55],
            [17, '07',  56, 70],
            [17, 'A0',  71, 113],
            [17, 'D0', 114, 119],
            [18, '02',   1, 20],
            [18, '03',  21, 36],
            [18, '04',  37, 40],
            [18, '05',  41, 42],
            [18, '06',  43, 45],
            [18, 'A0',  46, 82],
            [18, 'D0',  83, 87],
            [19, '03',   1, 7],
            [19, '04',   8, 15],
            [19, '07',  16, 25],
            [19, '08',  26, 32],
            [19, 'A0',  33, 61],
            [19, 'D0',  62, 66],
            [20, '02',   1, 5],
            [20, '03',   6, 7],
            [20, '04',   8, 11],
            [20, '06',  12, 19],
            [20, '07',  20, 28],
            [20, '08',  29, 31],
            [20, 'A0',  32, 57],
            [20, 'D0',  58, 62],
            [21, '00',   0, 0],
            [22, '02',   1, 12],
            [22, '04',  13, 30],
            [22, 'A0',  31, 61],
            [22, 'D0',  62, 66],
            [23, '01',   1, 11],
            [23, '02',  12, 24],
            [23, '03',  25, 40],
            [23, '04',  41, 45],
            [23, 'A0',  46, 81],
            [23, 'D0',  82, 86],
    ]},
    {'name': 'serway', 'code': '530_S492fi10', 'distro': [
            [1,  '01', 1,  5 ],
            [1,  '02', 6,  7 ],
            [1,  '03', 8,  10],
            [1,  '04', 11, 16],
            [1,  '05', 17, 19],
            [1,  '06', 20, 28],
            [1,  'A0', 29, 38],
            [1,  'D0', 39, 39],
            [2,  '01', 1,  3 ],
            [2,  '02', 4,  5 ],
            [2,  '04', 6,  7 ],
            [2,  '05', 8,  11],
            [2,  '06', 12, 13],
            [2,  '07', 14, 24],
            [2,  '08', 25, 31],
            [2,  '09', 32, 33],
            [2,  'A0', 34, 41],
            [2,  'D0', 42, 44],
            [3,  '01', 1,  4 ],
            [3,  '02', 5,  5 ],
            [3,  '03', 6,  10],
            [3,  '04', 11, 33],
            [3,  'A0', 34, 45],
            [3,  'D0', 46, 46],
            [4,  '01', 1,  2 ],
            [4,  '02', 3,  5 ],
            [4,  '03', 6,  17],
            [4,  '04', 18, 22],
            [4,  '05', 23, 24],
            [4,  '06', 25, 33],
            [4,  'A0', 34, 48],
            [4,  'D0', 49, 53],
            [5,  '01', 1,  2 ],
            [5,  '04', 3,  8 ],
            [5,  '05', 9,  13],
            [5,  '06', 14, 14],
            [5,  '07', 15, 36],
            [5,  'A0', 37, 50],
            [5,  'D0', 51, 55],
            [6,  '01', 1,  8 ],
            [6,  '02', 9,  13],
            [6,  '03', 14, 17],
            [6,  '04', 18, 23],
            [6,  'A0', 24, 44],
            [6,  'D0', 45, 50],
            [7,  '02', 1,  4 ],
            [7,  '03', 5,  8 ],
            [7,  '04', 9,  20],
            [7,  '05', 21, 28],
            [7,  '06', 29, 30],
            [7,  '07', 31, 33],
            [7,  '08', 34, 37],
            [7,  '09', 38, 39],
            [7,  'A0', 40, 49],
            [7,  'D0', 50, 50],
            [8,  '01', 1,  1 ],
            [8,  '02', 2,  6 ],
            [8,  '03', 7,  9 ],
            [8,  '04', 10, 15],
            [8,  '05', 16, 22],
            [8,  'A0', 23, 43],
            [8,  'D0', 44, 47],
            [9,  '01', 1,  3 ],
            [9,  '02', 4,  6 ],
            [9,  '03', 7,  11],
            [9,  '04', 12, 18],
            [9,  '05', 19, 23],
            [9,  '06', 24, 26],
            [9,  '07', 27, 29],
            [9,  '08', 30, 31],
            [9,  '09', 32, 34],
            [9,  'A0', 35, 51],
            [9,  'D0', 52, 54],
            [10, '05', 15, 21],
            [10, '06', 22, 24],
            [10, '07', 25, 26],
            [10, '08', 27, 32],
            [10, '09', 33, 35],
            [10, 'A0', 36, 47],
            [10, 'D0', 48, 50],
            [11, '01', 1,  7 ],
            [11, '02', 8,  15],
            [11, '03', 16, 21],
            [11, '04', 22, 30],
            [11, '05', 31, 31],
            [11, 'A0', 32, 47],
            [11, 'D0', 48, 50],
            [12, '01', 1,  2 ],
            [12, '02', 3,  5 ],
            [12, '03', 6,  16],
            [12, '04', 17, 23],
            [12, 'A0', 24, 48],
            [12, 'D0', 49, 50],
            [13, '01', 1,  4 ],
            [13, '02', 5,  5 ],
            [13, '03', 6,  7 ],
            [13, '04', 8,  14],
            [13, '05', 15, 17],
            [13, '06', 18, 23],
            [13, 'A0', 24, 44],
            [13, 'D0', 45, 45],
            [14, '01', 1,  3 ],
            [14, '02', 4,  7 ],
            [14, '03', 8,  10],
            [14, '04', 11, 19],
            [14, '05', 20, 22],
            [14, '06', 23, 26],
            [14, '07', 27, 29],
            [14, '08', 30, 31],
            [14, 'A0', 32, 48],
            [14, 'D0', 49, 50],
            [15, '01', 1,  1 ],
            [15, '02', 2,  9 ],
            [15, '03', 10, 15],
            [15, '04', 16, 16],
            [15, '05', 17, 23],
            [15, '06', 24, 25],
            [15, '07', 26, 30],
            [15, 'A0', 31, 47],
            [15, 'D0', 48, 51],
            [16, '01', 1,  4 ],
            [16, '02', 5,  9 ],
            [16, '03', 10, 14],
            [16, '04', 15, 19],
            [16, '05', 20, 22],
            [16, '06', 23, 23],
            [16, '07', 24, 30],
            [16, '08', 31, 37],
            [16, '09', 38, 42],
            [16, 'A0', 43, 56],
            [16, 'D0', 57, 60],
            [17, '01', 1,  7 ],
            [17, '02', 8,  10],
            [17, '04', 11, 18],
            [17, '05', 19, 19],
            [17, '06', 20, 30],
            [17, '07', 31, 32],
            [17, '08', 33, 33],
            [17, 'A0', 34, 49],
            [17, 'D0', 50, 50],
            [18, '02', 1,  1 ],
            [18, '03', 2,  5 ],
            [18, '04', 6,  17],
            [18, '05', 18, 29],
            [18, 'A0', 30, 43],
            [18, 'D0', 44, 46],
            [19, '01', 1,  1],
            [19, '02', 2, 9],
            [19, '03', 10, 14],
            [19, '04', 15, 16],
            [19, '05', 17, 22],
            [19, '06', 23, 28],
            [19, 'A0', 29, 45],
            [19, 'D0', 46, 47],
            [20, '01', 1, 8],
            [20, '02', 9, 13],
            [20, '03', 14, 17],
            [20, '04', 18, 21],
            [20, '05', 22, 26],
            [20, 'A0', 27, 44],
            [20, 'D0', 45, 45],
            [21, '01', 1, 3],
            [21, '02', 4, 6],
            [21, '04', 7, 17],
            [21, '05', 18, 19],
            [21, '06', 20, 21],
            [21, '07', 22, 26],
            [21, '08', 27, 29],
            [21, 'A0', 30, 46],
            [21, 'D0', 47, 47],
    ]},
    {'name': 'serwayF7', 'code': '530_S492fi7', 'distro': []},
    {'name': 'serwayF9', 'code': '530_S492fi9', 'distro': []},
    {'name': 'shankar', 'code': '530-S528', 'distro': []},
    {'name': 'wilson', 'code': '530_W696f6', 'distro': []}
    ]
# loading current root files
clean_list = user_dir / 'books.json'
if not clean_list.is_file():
    clean_list.touch()
    clean_list.write_text(json.dumps(books))


CHPATH = ""


def set_header(erPath,book):
    HEADER = """\\documentclass[12pt,
  notitlepage,
  % openany,
  twoside,
  % twocolumn,
  ]{article}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%==<Definición de comandos propios>==================
\\newcommand{\\AAfolder}{/home/luis/.config/mytex}
\\usepackage{\\AAfolder/sty/SetFormat}
\\newcommand{\\AMfolder}{/home/luis/Documents/01-U/00-00AA-Apuntes}
\\usepackage{\\AAfolder/sty/ColorsLight}
\\usepackage{\\AAfolder/sty/SetSymbols}
% En el siguiente comando se indica cuál es el archivo que tiene las referencia
"""
    HEADER += "\\newcommand{\\"
    HEADER += book
    HEADER += "}{"
    HEADER += erPath
    HEADER += "}"
    HEADER += """
\\addbibresource{\\AAfolder/bib/Biblioteca.bib}
\\usepackage{\\AAfolder/sty/HW-header}
\\setbool{solutions}{true}
\\newboolean{MC}
\\setbool{MC}{true}
\\graphicspath{{\\AMfolder/img/530_S439fi14-Sears}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%==<Inicia documento>================================
\\begin{document}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \\maketitle
% \\tableofcontents
% \\listoffigures
% \\listoftables
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
"""
    return HEADER



def add_inputs(book, chNum, secNum, start, end):
    path = Path(f'\\AMfolder/solu/er-{books[book]}-{book}/530-{book.capitalize()}-C{chNum}')
    fout = f'{book}-C{chNum:02d}S{secNum}'
    text = ''
    for idx in range(start, end+1):
        thisF = path / ''.join([fout, 'P{:03d}.tex'.format(idx)])
        text += "\t\\input{"+f"{thisF}"+"}\n"
    return text


BOTTOM = """
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%==<Bibliografía>====================================
%		Para la bibliografía se usa el gestor de
%	referencias bibtex. Toda la información de las
%	referencias se pone en un archivo aparte con la
%	terminación .bib y se agrega aquí
%
% \\printbibliography
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%==<Apéndice>========================================
%		Se puede crear apéndices que luego se pueden
%	referenciar con la etiqueta
% \\appendix
% \\section{Figuras \\label{app:fig}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%==<Index>===========================================
% \\printindex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%==<Fin del documento>===============================
\\end{document}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"""


def create_book_solutions_files():
    main_text = ''
    book = "resnickF4"
    for sec in distro[book]:
        os.system('python createTexEnun.py --start={} --end={} --ch={} --sec={} --book={}'.format(sec[2], sec[3], sec[0], sec[1], book))
        main_text += add_inputs(book, sec[0], sec[1], sec[2], sec[3])
    soluPath = CHPATH
    HEADER = set_header(soluPath, book)
    with open(f"ER-{books[book]}.tex", "w") as file:
        file.write(HEADER)
        file.write(main_text)
        file.write(BOTTOM)


@click.command()
@click.option(
    '--start',
    default=1,
    type=int,
    help='First exercise number'
)
@click.option(
    '--end',
    default=1,
    type=int,
    help='Last included exercise number'
)
@click.option(
    '--ch',
    default=1,
    type=int,
    help='Current chapter'
)
@click.option(
    '--sec',
    default='01',
    type=str,
    help='Current section'
)
@click.option(
    '--book',
    default='serway',
    type=str
)
@click.option(
    '--verbose',
    default=2,
    type=int
)
def create_solution_file(start, end, ch, sec, book, verbose):
    if book not in books:
        print('Requested book is not in bib')
        return None
    global CHPATH

    CHPATH = f'er-{books[book]}-{book}/530-{book.capitalize()}-C{ch}'
    path = Path(f'./{CHPATH}').absolute()
    log(f'''
Se está trabajando en:
{path}''', verbose)
    if not path.exists():
        os.makedirs(path)
    fout = f'{book}-C{ch:02d}S{sec}'
    for idx in range(start, end+1):
        thisF = path / ''.join([fout, 'P{:03d}.tex'.format(idx)])
        subprocess.run(['touch', thisF])
        mns = '''\\ifthenelse{\\boolean{MC}}{
  \\exa['''+str(ch)+']{'+str(idx)+'''} %\\cite{'''+str(book)+'''}
}{\\exa{}}
.

\\begin{enumerate}[a)]
\\item .
\\end{enumerate}

\\ifthenelse{\\boolean{solutions}}{
  \\paragraph{Solución:}
  \\begin{enumerate}[a)]
    \\item .
  Datos:
  \\[\\begin{array}{l}
  \\end{array}\\]
  \\end{enumerate}
}{}
'''
        lines = mns.split('\n')
        for line in lines:
            os.system('echo "'+line+'" >> '+str(thisF))
    pass


def log(mns, verbose=2):
    if verbose > 1:
        print(mns)


if __name__ == '__main__':
    create_solution_file()
